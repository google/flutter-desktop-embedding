# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/flutter.gni")
import("flutter_library.gni")

# Allows targets depending on the flutter library to use library-style
# inculdes for its header rather than project-relative.
config("relative_flutter_library_headers") {
  include_dirs = [ "$flutter_library_download_dir" ]
}

action("fetch_flutter_library") {
  script = "//tools/dart_tools/bin/sync_flutter_library.dart"
  inputs = [
    "$flutter_tree_path/bin/internal/engine.version",
  ]
  outputs = flutter_library_files + flutter_library_headers +
      flutter_client_wrapper_source + flutter_client_wrapper_headers
  args = [
    "--flutter_root=$flutter_tree_path",
    rebase_path(flutter_library_download_dir, root_build_dir),
  ]
  public_configs = [ ":relative_flutter_library_headers" ]
}

# Allows targets depending on the flutter client wrappers to use library-style
# inculdes for its headers rather than project-relative.
config("relative_flutter_wrapper_headers") {
  include_dirs = [ "$flutter_library_download_dir/cpp_client_wrapper/include" ]
}

# A static library build from the Flutter client wrapper.
# TODO: This is only used for plugins, but plugins don't need the view
# controller; revisit approach.
source_set("flutter_wrapper") {
  sources = flutter_client_wrapper_source
  public = flutter_client_wrapper_headers

  # Use shared library settings since this target will be folded into shared
  # libraries.
  configs -= default_static_configs
  configs += default_dynamic_configs

  deps = [ ":fetch_flutter_library" ]

  if (is_linux) {
    configs += [ "//build/linux/config:jsoncpp" ]
  }
  if (is_win) {
    deps += [
      "//third_party/jsoncpp:jsoncpp",
    ]
  }

  public_configs = [ ":relative_flutter_wrapper_headers" ]
}
